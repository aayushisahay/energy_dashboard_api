//EnergyChart.jsx

import React, { useEffect, useState } from 'react';
import Highcharts from 'highcharts';
import HighchartsReact from 'highcharts-react-official';
import { getEnergySummary, getSpaceWiseEnergy } from '../services/api';

const EnergyChart = () => {
  const [lineChartOptions, setLineChartOptions] = useState(null);
  const [pieChartOptions, setPieChartOptions] = useState(null);

  const startTime = '2024-01-01T00:00:00';
  const endTime = '2024-04-30T23:00:00';
  const spaceIds = [1, 2, 3, 4, 6];

  useEffect(() => {
    const fetchData = async () => {
      try {

        const lineData = await getEnergySummary(spaceIds, startTime, endTime);

        const categories = lineData.hourlyAggregated.map(item => {
          const date = new Date(item.timestamp);

          return date.toLocaleString(undefined, { hour12: false, year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' });
        });

        const values = lineData.hourlyAggregated.map(item => item.energyConsumed);

        setLineChartOptions({
         chart: { height: 400, width: 1000 },
  title: { text: 'Energy Consumption Over Time' },
  xAxis: {
    categories,
    labels: {
      rotation: 45,
      style: { fontSize: '10px' }
    }
  },
  yAxis: { title: { text: 'Energy Consumed (kWh)' } },
  series: [{ name: 'Date', data: values }],
  tooltip: {
    formatter: function () {
      return `<b>${this.x}</b><br/>${this.series.name}: <b>${this.y.toFixed(2)} kWh</b>`;
            }
          }
        });

        const pieData = await getSpaceWiseEnergy(spaceIds, startTime, endTime);
        const pieSeries = pieData.totalBySpace.map(space => ({
          name: `Space ${space.spaceId}`,
          y: space.energyConsumed
        }));

        setPieChartOptions({
          chart: { type: 'pie', height: 300, width: 500 },
          title: { text: 'Top 5 Spaces by Energy Consumption' },
          series: [{
            name: 'Energy Consumed (kWh)',
            data: pieSeries
          }],
          tooltip: {
            pointFormat: '{series.name}: <b>{point.y:.2f} kWh</b>'
          },
          plotOptions: {
            pie: {
              allowPointSelect: true,
              cursor: 'pointer',
              dataLabels: {
                enabled: true,
                format: '<b>{point.name}</b>: {point.percentage:.1f} %'
              }
            }
          }
        });

      } catch (error) {
        console.error("Error loading charts:", error);
      }
    };

    fetchData();
  }, []);

  return (
    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '20px' }}>
      <div style={{ width: '1300px', marginLeft: '0' }}>
        {lineChartOptions ? (
          <HighchartsReact highcharts={Highcharts} options={lineChartOptions} />
        ) : (
          <p>Loading line chart...</p>
        )}
      </div>
      <div style={{ width: '520px', marginRight: '0' }}>
        {pieChartOptions ? (
          <HighchartsReact highcharts={Highcharts} options={pieChartOptions} />
        ) : (
          <p>Loading pie chart...</p>
        )}
      </div>
    </div>
  );
};

export default EnergyChart;


//app.js

import React from 'react';
import './App.css';
import EnergyChart from './components/EnergyChart'; 
function App() {
  return (
    <div className="App">
      <h1>Energy Consumption Dashboard</h1>
      <EnergyChart /> 
    </div>
  );
}

export default App;


//api.js

import axios from 'axios';

const BASE_URL = 'http://localhost:5130/api'; 
export const getEnergySummary = async (spaceIds, startTime, endTime) => {
  try {
    const response = await axios.get(`${BASE_URL}/MeterReadings/energy-summary`, {
      params: {
        spaceIds,
        startTime,
        endTime,

      },
    });

    console.log(" API Response from getEnergySummary:", response.data); 
    return response.data;
  } catch (error) {
    console.error(" API Error:", error);
    throw error;
  }
};

export const getSpaceWiseEnergy = async (spaceIds, startTime, endTime) => {
  try {
    const response = await axios.get(`${BASE_URL}/MeterReadings/space-wise-energy`, {
      params: { spaceIds, startTime, endTime },
    });
    console.log("API Response from getSpaceWiseEnergy:", response.data);
    return response.data;
  } catch (error) {
    console.error("API Error (space-wise-energy):", error);
    throw error;
  }
};
